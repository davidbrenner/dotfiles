#set -g default-terminal "xterm-color" 
set -g default-terminal "screen-256color" 
set -g status-utf8 on

#bind-key M source-file ~/.tmux/mac.session
#bind-key L source-file ~/.tmux/linux.session

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# THEME
set -g status-bg black
set -g status-fg white
set -g status-left-length 30
set -g status-right-length 60
set -g status-left ' #[default]'
set -g status-right '#[fg=colour235]Inbox: #[fg=yellow]#(ls ~/Mails/INBOX/new | wc -l | tr -d " ")#[fg=colour235]/#(ls ~/Mails/INBOX/cur  ~/Mails/INBOX/new | wc -l | tr -d " ") | Bugzilla: #[fg=yellow]#(ls ~/Mails/bugzilla/new | wc -l | tr -d " ")#[fg=colour235]/#(ls ~/Mails/bugzilla/cur ~/Mails/bugzilla/new| wc -l | tr -d " ") | ml: #[fg=yellow]#(ls ~/Mails/lists/new | wc -l | tr -d " ")#[fg=colour235]/#(ls ~/Mails/lists/cur ~/Mails/lists/new | wc -l | tr -d " ")#[default]  #[fg=colour198]%H:%M#[default]'

setw -g window-status-format '#[fg=colour235]#I #[fg=white]#W#[default]  '
#FIXME: I want to be able to use: ⮁
setw -g window-status-current-format '#[bg=white,fg=black]⮀ #W #[bg=black,fg=white]⮀'

######################### SCREEN bind-keyINGS ######################

# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file bind-keys many of the common GNU screen key bind-keyings to
# appropriate tmux key bind-keyings. Note that for some key bind-keyings there is no
# tmux analogue and also that this set omits bind-keying some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bind-keyings and they are in addition to the
# normal tmux key bind-keyings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind-key C-b
set -g prefix ^A
bind-key a send-prefix

# bind-key appropriate commands similar to screen.
# lockscreen ^X x 
unbind-key ^X
bind-key ^X lock-server
unbind-key x
bind-key x lock-server

# screen ^C c 
unbind-key ^C
bind-key ^C new-window
bind-key c new-window

# detach ^D d
unbind-key ^D
bind-key ^D detach

# displays * 
unbind-key *
bind-key * list-clients

# next ^@ ^N sp n 
unbind-key ^@
bind-key ^@ next-window
unbind-key ^N
bind-key ^N next-window
unbind-key " "
bind-key " " next-window
unbind-key n
bind-key n next-window

# title A
unbind-key A
bind-key A command-prompt "rename-window %%"

# other ^A
unbind-key ^A
bind-key ^A last-window

# prev ^H ^P p ^? 
unbind-key ^H
bind-key ^H previous-window
unbind-key ^P
bind-key ^P previous-window
unbind-key p
bind-key p previous-window
unbind-key BSpace
bind-key BSpace previous-window

# windows ^W w 
unbind-key ^W
bind-key ^W list-windows
unbind-key w
bind-key w list-windows

# quit \ 
#unbind-key \
#bind-key \ confirm-before "kill-server"

# kill K k 
unbind-key K
bind-key K confirm-before "kill-window"
unbind-key k
bind-key k confirm-before "kill-window"

# redisplay ^L l 
unbind-key ^L
bind-key ^L refresh-client
unbind-key l
bind-key l refresh-client

# split -v |
unbind-key |
bind-key | split-window

# :kB: focus up
unbind-key Tab
bind-key Tab select-pane -t:.+
unbind-key BTab
bind-key BTab select-pane -t:.-

# " windowlist -b
unbind-key '"'
bind-key '"' choose-window
